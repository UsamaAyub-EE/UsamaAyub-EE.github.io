{"version":3,"sources":["../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js"],"names":["PolygonDrawerBase","draw","data","particle","radius","start","this","getCenter","side","getSidesData","drawPolygon","getSidesCount","_polygon$sides","polygon","shapeData","Math","round","getRangeValue","sides","PolygonDrawer","x","y","count","denominator","numerator","length"],"mappings":"uHAAA,8CAEO,MAAMA,EACT,UAAMC,CAAKC,GACP,MAAM,SAAEC,EAAQ,OAAEC,GAAWF,EAAMG,EAAQC,KAAKC,UAAUJ,EAAUC,GAASI,EAAOF,KAAKG,aAAaN,EAAUC,IAAS,YAAEM,SAAsB,+BACjJA,EAAYR,EAAMG,EAAOG,EAC7B,CACAG,cAAcR,GAAU,IAAAS,EACpB,MAAMC,EAAUV,EAASW,UACzB,OAAOC,KAAKC,MAAMC,YAA4B,QAAfL,EAAQ,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASK,aAAK,IAAAN,IARjC,GASjB,E,mCCVJ,kEAEO,MAAMO,UAAsBnB,IAC/BO,UAAUJ,EAAUC,GAChB,MAAO,CACHgB,GAAIhB,GAAUD,EAASe,MAJT,KAKdG,GAAIjB,EAAS,IAErB,CACAK,aAAaN,EAAUC,GACnB,MAAMc,EAAQf,EAASe,MACvB,MAAO,CACHI,MAAO,CACHC,YAAa,EACbC,UAAWN,GAEfO,OAf6B,KAepBrB,GAAqBc,EAfmB,GAiBzD,E","file":"static/js/34.b1e67180.chunk.js","sourcesContent":["import { getRangeValue, } from \"@tsparticles/engine\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    async draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), { drawPolygon } = await import(\"./Utils.js\");\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n"],"sourceRoot":""}