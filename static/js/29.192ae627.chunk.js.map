{"version":3,"sources":["../node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSizeLimit.js","../node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSize.js","../node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/Absorber.js","../node_modules/@tsparticles/plugin-absorbers/browser/AbsorbersPlugin.js"],"names":["AbsorberSizeLimit","constructor","this","radius","mass","load","data","undefined","AbsorberSize","ValueWithRandom","super","density","value","limit","isNumber","Absorber","color","OptionsColor","draggable","opacity","destroy","orbits","size","create","name","position","x","setRangeValue","y","AbsorbersPlugin","id","getPlugin","container","Absorbers","loadOptions","options","source","_source$interactivity","needsPlugin","absorbers","executeOnSingleOrMultiple","absorber","tmp","interactivity","modes","_options$interactivit","isArray","length","events","onClick","mode","isInArray"],"mappings":"qKAAO,MAAMA,EACTC,cACIC,KAAKC,OAAS,EACdD,KAAKE,KAAO,CAChB,CACAC,KAAKC,GACIA,SAGaC,IAAdD,EAAKF,OACLF,KAAKE,KAAOE,EAAKF,WAEDG,IAAhBD,EAAKH,SACLD,KAAKC,OAASG,EAAKH,QAE3B,ECbG,MAAMK,UAAqBC,IAC9BR,cACIS,QACAR,KAAKS,QAAU,EACfT,KAAKU,MAAQ,GACbV,KAAKW,MAAQ,IAAIb,CACrB,CACAK,KAAKC,GACIA,IAGLI,MAAML,KAAKC,QACUC,IAAjBD,EAAKK,UACLT,KAAKS,QAAUL,EAAKK,SAEpBG,YAASR,EAAKO,OACdX,KAAKW,MAAMV,OAASG,EAAKO,MAGzBX,KAAKW,MAAMR,KAAKC,EAAKO,OAE7B,ECrBG,MAAME,EACTd,cACIC,KAAKc,MAAQ,IAAIC,IACjBf,KAAKc,MAAMJ,MAAQ,UACnBV,KAAKgB,WAAY,EACjBhB,KAAKiB,QAAU,EACfjB,KAAKkB,SAAU,EACflB,KAAKmB,QAAS,EACdnB,KAAKoB,KAAO,IAAId,CACpB,CACAH,KAAKC,QACYC,IAATD,SAGeC,IAAfD,EAAKU,QACLd,KAAKc,MAAQC,IAAaM,OAAOrB,KAAKc,MAAOV,EAAKU,aAE/BT,IAAnBD,EAAKY,YACLhB,KAAKgB,UAAYZ,EAAKY,WAE1BhB,KAAKsB,KAAOlB,EAAKkB,UACIjB,IAAjBD,EAAKa,UACLjB,KAAKiB,QAAUb,EAAKa,cAEFZ,IAAlBD,EAAKmB,WACLvB,KAAKuB,SAAW,CAAC,OACOlB,IAApBD,EAAKmB,SAASC,IACdxB,KAAKuB,SAASC,EAAIC,aAAcrB,EAAKmB,SAASC,SAE1BnB,IAApBD,EAAKmB,SAASG,IACd1B,KAAKuB,SAASG,EAAID,aAAcrB,EAAKmB,SAASG,UAGpCrB,IAAdD,EAAKgB,MACLpB,KAAKoB,KAAKjB,KAAKC,EAAKgB,WAEHf,IAAjBD,EAAKc,UACLlB,KAAKkB,QAAUd,EAAKc,cAEJb,IAAhBD,EAAKe,SACLnB,KAAKmB,OAASf,EAAKe,QAE3B,E,mCC5CJ,4EAEO,MAAMQ,EACT5B,cACIC,KAAK4B,GAAK,WACd,CACA,eAAMC,CAAUC,GACZ,MAAM,UAAEC,SAAoB,+BAC5B,OAAO,IAAIA,EAAUD,EACzB,CACAE,YAAYC,EAASC,GAAQ,IAAAC,GACpBnC,KAAKoC,YAAYH,IAAajC,KAAKoC,YAAYF,MAG1C,OAANA,QAAM,IAANA,KAAQG,YACRJ,EAAQI,UAAYC,YAA0BJ,EAAOG,WAAYE,IAC7D,MAAMC,EAAM,IAAI3B,IAEhB,OADA2B,EAAIrC,KAAKoC,GACFC,CAAG,KAGlBP,EAAQQ,cAAcC,MAAML,UAAYC,YAAgC,OAANJ,QAAM,IAANA,GAAqB,QAAfC,EAAND,EAAQO,qBAAa,IAAAN,GAAO,QAAPA,EAArBA,EAAuBO,aAAK,IAAAP,OAAA,EAA5BA,EAA8BE,WAAYE,IACxG,MAAMC,EAAM,IAAI3B,IAEhB,OADA2B,EAAIrC,KAAKoC,GACFC,CAAG,IAElB,CACAJ,YAAYH,GAAS,IAAAU,EACjB,IAAKV,EACD,OAAO,EAEX,MAAMI,EAAYJ,EAAQI,UAC1B,OAAIO,YAAQP,KACCA,EAAUQ,SAEdR,KAGqB,QAArBM,EAAAV,EAAQQ,qBAAa,IAAAE,GAAQ,QAARA,EAArBA,EAAuBG,cAAM,IAAAH,GAAS,QAATA,EAA7BA,EAA+BI,eAAO,IAAAJ,IAAtCA,EAAwCK,OAC7CC,YAAU,WAAYhB,EAAQQ,cAAcK,OAAOC,QAAQC,MAInE,E","file":"static/js/29.192ae627.chunk.js","sourcesContent":["export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"@tsparticles/engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit.js\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"@tsparticles/engine\";\nimport { AbsorberSize } from \"./AbsorberSize.js\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nexport class AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    async getPlugin(container) {\n        const { Absorbers } = await import(\"./Absorbers.js\");\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\n"],"sourceRoot":""}