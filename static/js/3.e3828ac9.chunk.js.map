{"version":3,"sources":["components/Header.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx","components/Projects.jsx","../node_modules/react-bootstrap/esm/Button.js"],"names":["Header","props","title","_jsx","className","children","CardBody","React","_ref","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","variant","concat","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Footer","ImgOverlay","Badge","pill","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","_project$links","theme","useContext","ThemeContext","project","_jsxs","style","borderRadius","backgroundColor","cardBackground","borderColor","cardBorderColor","borderWidth","width","marginLeft","marginRight","marginBottom","bsSecondaryVariant","image","src","height","ReactMarkdown","bodyText","links","map","link","Button","onClick","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant","rowStyle","justifyContent","showMoreStyle","Projects","_data$projects","header","data","setData","useState","showMore","setShowMore","init","setInit","useEffect","projects","initParticlesEngine","async","loadFull","engine","then","numberOfItems","length","Particles","options","particlesOptions","slice","Fade","FallbackSpinner","size","active","disabled","buttonProps","tagName","useButtonProps"],"mappings":"0HAAA,8BAaeA,UATf,SAAgBC,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,mFCDA,MAAMI,EAAwBC,cAAiB,CAAAC,EAK5CC,KAAQ,IALqC,UAC9CL,EAAS,SACTM,EACAC,GAAIC,EAAY,SACbX,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,aACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJK,EAASS,YAAc,WACRT,QCdf,MAAMU,EAA0BT,cAAiB,CAAAC,EAK9CC,KAAQ,IALuC,UAChDL,EAAS,SACTM,EACAC,GAAIC,EAAY,SACbX,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,eACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJe,EAAWD,YAAc,aACVC,Q,SCZf,MAAMC,EAA0BV,cAAiB,CAAAC,EAM9CC,KAAQ,IANuC,SAChDC,EAAQ,UACRN,EAEAO,GAAIC,EAAY,SACbX,GACJO,EACC,MAAMU,EAASL,YAAmBH,EAAU,eACtCS,EAAeC,mBAAQ,KAAM,CACjCC,mBAAoBH,KAClB,CAACA,IACL,OAAoBf,cAAKmB,IAAkBC,SAAU,CACnDC,MAAOL,EACPd,SAAuBF,cAAKS,EAAW,CACrCH,IAAKA,KACFR,EACHG,UAAWU,IAAWV,EAAWc,MAEnC,IAEJD,EAAWF,YAAc,aACVE,QCvBf,MAAMQ,EAAuBlB,cAE7B,CAAAC,EAMGC,KAAQ,IANV,SACCC,EAAQ,UACRN,EAAS,QACTsB,EACAf,GAAIC,EAAY,SACbX,GACJO,EACC,MAAMU,EAASL,YAAmBH,EAAU,YAC5C,OAAoBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWY,EAAU,GAAHC,OAAMT,EAAM,KAAAS,OAAID,GAAYR,EAAQd,MAC9DH,GACH,IAEJwB,EAAQV,YAAc,UACPU,QCjBf,MAAMG,EAA8BrB,cAAiB,CAAAC,EAKlDC,KAAQ,IAL2C,UACpDL,EAAS,SACTM,EACAC,GAAIC,EAAY,SACbX,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,oBACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJ2B,EAAeb,YAAc,iBACda,QCdf,MAAMC,EAAwBtB,cAAiB,CAAAC,EAK5CC,KAAQ,IALqC,UAC9CL,EAAS,SACTM,EACAC,GAAIC,EAAY,OACbX,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,aACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJ4B,EAASd,YAAc,WACRc,Q,SCbf,MAAMC,EAAgBC,YAAiB,MACjCC,EAA4BzB,cAAiB,CAAAC,EAKhDC,KAAQ,IALyC,UAClDL,EAAS,SACTM,EACAC,GAAIC,EAAYkB,KACb7B,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,iBACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJ+B,EAAajB,YAAc,eACZiB,QChBf,MAAMC,EAAwB1B,cAAiB,CAAAC,EAK5CC,KAAQ,IALqC,UAC9CL,EAAS,SACTM,EACAC,GAAIC,EAAY,OACbX,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,aACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJgC,EAASlB,YAAc,WACRkB,QCbf,MAAMC,EAAgBH,YAAiB,MACjCI,EAAyB5B,cAAiB,CAAAC,EAK7CC,KAAQ,IALsC,UAC/CL,EAAS,SACTM,EACAC,GAAIC,EAAYsB,KACbjC,GACJO,EAEC,OADAE,EAAWG,YAAmBH,EAAU,cACpBP,cAAKS,EAAW,CAClCH,IAAKA,EACLL,UAAWU,IAAWV,EAAWM,MAC9BT,GACH,IAEJkC,EAAUpB,YAAc,YACToB,QCPf,MAAMC,EAAoB7B,cAAiB,CAAAC,EAWxCC,KAAQ,IAXiC,SAC1CC,EAAQ,UACRN,EAAS,GACTiC,EAAE,KACFC,EAAI,OACJC,EAAM,KACNC,GAAO,EAAK,SACZnC,EAEAM,GAAIC,EAAY,SACbX,GACJO,EACC,MAAMU,EAASL,YAAmBH,EAAU,QAC5C,OAAoBP,cAAKS,EAAW,CAClCH,IAAKA,KACFR,EACHG,UAAWU,IAAWV,EAAWc,EAAQmB,GAAM,MAAJV,OAAUU,GAAMC,GAAQ,QAAJX,OAAYW,GAAQC,GAAU,UAAJZ,OAAcY,IACvGlC,SAAUmC,EAAoBrC,cAAKG,EAAU,CAC3CD,SAAUA,IACPA,GACL,IAEJ+B,EAAKrB,YAAc,OACJ0B,aAAOC,OAAON,EAAM,CACjCO,IAAKlB,EACLmB,MAAOT,EACPU,SAAUb,EACVc,KAAMxC,EACNyC,KAAMlB,EACNmB,KAAMf,EACNjC,OAAQiB,EACRgC,OAAQjC,EACRkC,WAAYtB,I,SCzCd,MAAMuB,EAAqB5C,cAAiB,CAAAC,EAQzCC,KAAQ,IARkC,SAC3CC,EAAQ,GACR2B,EAAK,UAAS,KACde,GAAO,EAAK,KACZd,EAAI,UACJlC,EACAO,GAAIC,EAAY,UACbX,GACJO,EACC,MAAMU,EAASL,YAAmBH,EAAU,SAC5C,OAAoBP,cAAKS,EAAW,CAClCH,IAAKA,KACFR,EACHG,UAAWU,IAAWV,EAAWc,EAAQkC,GAAQ,eAAgBd,GAAQ,QAAJX,OAAYW,GAAQD,GAAM,MAAJV,OAAUU,KACrG,IAEJc,EAAMpC,YAAc,QACLoC,Q,iBCjBf,MAAME,EAAS,CACbC,WAAY,CACVC,YAAa,GACbC,aAAc,GACdC,WAAY,EACZC,cAAe,EACfC,OAAQ,GAEVC,eAAgB,CACdC,SAAU,GACVC,WAAY,KAEdC,cAAe,CACbC,UAAW,QAEbC,UAAW,CACTC,eAAgB,OAChBC,QAAS,IAEXC,YAAa,CACXT,OAAQ,IAqFGU,UAjFMpE,IAAW,IAADqE,EAC7B,MAAMC,EAAQC,qBAAWC,MAEnB,QAAEC,GAAYzE,EAEpB,OACEE,cAAA,OAAAE,SACEsE,eAACvC,EAAI,CACHwC,MAAO,CACLC,aAAc,GACdC,gBAAiBP,EAAMQ,eACvBC,YAAaT,EAAMU,gBACnBC,YAAa,EACbC,MAAO,IACPC,WAAY,IACZC,YAAa,IACbC,aAAc,IAEhBhD,KAAMiC,EAAMgB,mBAAmBlF,SAAA,EAEvB,OAAPqE,QAAO,IAAPA,OAAO,EAAPA,EAASc,QACRrF,cAACiC,EAAKO,IAAG,CACPjB,QAAQ,MACR+D,IAAY,OAAPf,QAAO,IAAPA,OAAO,EAAPA,EAASc,MACdZ,MAAO,CAAEc,OAAQ,OAGrBf,eAACvC,EAAKU,KAAI,CAAAzC,SAAA,CACRF,cAACiC,EAAKQ,MAAK,CAACgC,MAAOvB,EAAOO,eAAevD,SAAEqE,EAAQxE,QACnDC,cAACiC,EAAKY,KAAI,CAAC4B,MAAOvB,EAAOU,cAAepD,GAAG,MAAKN,SAC9CF,cAACwF,IAAa,CAAAtF,SAAEqE,EAAQkB,gBAI5BzF,cAACiC,EAAKU,KAAI,CAAAzC,SACA,OAAPqE,QAAO,IAAPA,GAAc,QAAPJ,EAAPI,EAASmB,aAAK,IAAAvB,OAAP,EAAPA,EAAgBwB,KAAKC,GACpB5F,cAAC6F,IAAM,CAELpB,MAAOvB,EAAOe,YACd1C,QAAS,WAAa6C,EAAMgB,mBAC5BU,QAASA,IAAMC,OAAOC,KAAKJ,EAAKK,KAAM,UAAU/F,SAE/C0F,EAAKzD,MALDyD,EAAKK,UASf1B,EAAQ2B,MACPlG,cAACiC,EAAKa,OAAM,CAAC2B,MAAO,CAAEE,gBAAiBP,EAAM+B,sBAAuBjG,SACjEqE,EAAQ2B,KAAKP,KAAKS,GACjBpG,cAACgD,EAAK,CAEJC,MAAI,EACJf,GAAIkC,EAAMgB,mBACVjD,KAAMiC,EAAMiC,iBACZ5B,MAAOvB,EAAOC,WAAWjD,SAExBkG,GANIA,WAYX,C,mCC5FV,iHAaA,MAAMlD,EAAS,CACboD,SAAU,CACRC,eAAgB,UAElBC,cAAe,CACbhD,OAAQ,KA2DGiD,UAvDG3G,IAAW,IAAD4G,EAC1B,MAAMtC,EAAQC,qBAAWC,MACnB,OAAEqC,GAAW7G,GACZ8G,EAAMC,GAAWC,mBAAS,OAC1BC,EAAUC,GAAeF,oBAAS,IAClCG,EAAMC,GAAWJ,oBAAS,GAEjCK,qBAAU,KACRN,EAAQO,GACJH,GAGJI,aAAoBC,gBACZC,YAASC,EAAO,IACrBC,MAAK,KACNP,GAAQ,EAAK,GACb,GACD,CAACD,IACJ,MAAMS,EAAgBX,GAAYH,EAAOA,EAAKe,OAAS,EACvD,OACEnD,eAAA,OAAAtE,SAAA,CACG+G,GAAQjH,cAAC4H,IAAS,CAACC,QAASC,IAC7B9H,cAACH,UAAM,CAACE,MAAO4G,IACdC,EACCpC,eAAA,OAAAtE,SAAA,CACEF,cAAA,OAAKC,UAAU,qBAAoBC,SACnB,QADmBwG,EAChCE,EAAKQ,gBAAQ,IAAAV,OAAA,EAAbA,EAAeqB,MAAM,EAAGL,GAAe/B,KAAKpB,GAC3CvE,cAACgI,IAAI,CAAA9H,SACHF,cAACkE,UAAW,CAACK,QAASA,KADbA,EAAQxE,WAKvBC,cAAA,OAAAE,UACI6G,GACA/G,cAAC6F,IAAM,CACLpB,MAAOvB,EAAOsD,cACdjF,QAAS6C,EAAMgB,mBACfU,QAASA,IAAMkB,GAAY,GAAM9G,SAClC,mBAOPF,cAACiI,UAAe,MAEd,C,mCCrEV,iDAOA,MAAMpC,EAAsBzF,cAAiB,CAAAC,EAS1CC,KAAQ,IATmC,GAC5CE,EAAE,SACFD,EAAQ,QACRgB,EAAU,UAAS,KACnB2G,EAAI,OACJC,GAAS,EAAK,SACdC,GAAW,EAAK,UAChBnI,KACGH,GACJO,EACC,MAAMU,EAASL,YAAmBH,EAAU,QACrC8H,GAAa,QAClBC,IACGC,YAAe,CAClBD,QAAS9H,EACT4H,cACGtI,IAECW,EAAY6H,EAClB,OAAoBtI,cAAKS,EAAW,IAC/B4H,KACAvI,EACHQ,IAAKA,EACL8H,SAAUA,EACVnI,UAAWU,IAAWV,EAAWc,EAAQoH,GAAU,SAAU5G,GAAW,GAAJC,OAAOT,EAAM,KAAAS,OAAID,GAAW2G,GAAQ,GAAJ1G,OAAOT,EAAM,KAAAS,OAAI0G,GAAQpI,EAAMmG,MAAQmC,GAAY,aACvJ,IAEJvC,EAAOjF,YAAc,SACNiF,K","file":"static/js/3.e3828ac9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../index.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from \"react\";\nimport { Button, Badge, Card } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { ThemeContext } from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: \"left\",\n  },\n  linkStyle: {\n    textDecoration: \"none\",\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n\n  const { project } = props;\n\n  return (\n    <div>\n      <Card\n        style={{\n          borderRadius: 10,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n          borderWidth: 3,\n          width: 350,\n          marginLeft: 100,\n          marginRight: 100,\n          marginBottom: 50,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        {project?.image && (\n          <Card.Img\n            variant=\"top\"\n            src={project?.image}\n            style={{ height: 200 }}\n          />\n        )}\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle} as=\"div\">\n            <ReactMarkdown>{project.bodyText}</ReactMarkdown>\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={\"outline-\" + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, \"_blank\")}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        href: PropTypes.string.isRequired,\n      })\n    ),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport Header from \"./Header\";\nimport ProjectCard from \"./projects/ProjectCard\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport projects from \"../constants/projects.json\";\nimport particlesOptions from \"../particles.json\";\nimport Particles, {initParticlesEngine} from \"@tsparticles/react\";\nimport {loadFull} from \"tsparticles\";\n\nconst styles = {\n  rowStyle: {\n    justifyContent: \"center\",\n  },\n  showMoreStyle: {\n    margin: 25,\n  },\n};\n\nconst Projects = (props) => {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [showMore, setShowMore] = useState(false);\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    setData(projects);\n    if (init) {\n      return;\n    }\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, [init]);\n  const numberOfItems = showMore && data ? data.length : 6;\n  return (\n    <div>\n      {init && <Particles options={particlesOptions}/>}\n      <Header title={header} />\n      {data ? (\n        <div>\n          <div className=\"projects-container\">\n            {data.projects?.slice(0, numberOfItems).map((project) => (\n              <Fade key={project.title}>\n                <ProjectCard project={project} />\n              </Fade>\n            ))}\n          </div>\n          <div>\n            {!showMore && (\n              <Button\n                style={styles.showMoreStyle}\n                variant={theme.bsSecondaryVariant}\n                onClick={() => setShowMore(true)}\n              >\n                show more\n              </Button>\n            )}\n          </div>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </div>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"sourceRoot":""}