{"version":3,"sources":["../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js"],"names":["SizeUpdater","init","particle","container","sizeAnimation","options","size","animation","_particle$retina$size","enable","velocity","retina","sizeAnimationSpeed","percentDenominator","reduceFactor","sync","getRandom","Promise","resolve","isEnabled","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","destroyed","spawning","maxLoops","loops","reset","update","delta","this","updateAnimation","destroy"],"mappings":"wHAAA,+DAEO,MAAMA,EACT,UAAMC,CAAKC,GACP,MAAMC,EAAYD,EAASC,UAAgDC,EAAvBF,EAASG,QAAQC,KAAkCC,UAC7E,IAAAC,EAAtBJ,EAAcK,SACdP,EAASI,KAAKI,UAC0B,QAAnCF,EAACN,EAASS,OAAOC,0BAAkB,IAAAJ,IAAIL,EAAUQ,OAAOC,oBAAsBC,KAC3EV,EAAUQ,OAAOG,aACpBV,EAAcW,OACfb,EAASI,KAAKI,UAAYM,sBAG5BC,QAAQC,SAClB,CACAC,UAAUjB,GAAU,IAAAkB,EAAAC,EAAAC,EAAAC,EAChB,OAASrB,EAASsB,YACbtB,EAASuB,UACVvB,EAASI,KAAKG,UACU,QAAvBW,EAAClB,EAASI,KAAKoB,gBAAQ,IAAAN,IAlBnB,QAmBuB,QAAvBC,EAACnB,EAASI,KAAKoB,gBAAQ,IAAAL,IAnBvB,OAoBuB,QAApBC,EAACpB,EAASI,KAAKqB,aAAK,IAAAL,IApBvB,IAoB8D,QAA3BC,EAAKrB,EAASI,KAAKoB,gBAAQ,IAAAH,IApB9D,GAqBb,CACAK,MAAM1B,GACFA,EAASI,KAAKqB,MAvBL,CAwBb,CACA,YAAME,CAAO3B,EAAU4B,GACdC,KAAKZ,UAAUjB,KAGpB8B,aAAgB9B,EAAUA,EAASI,MAAM,EAAMJ,EAASG,QAAQC,KAAKC,UAAU0B,QAASH,SAClFb,QAAQC,UAClB,E","file":"static/js/115.16689957.chunk.js","sourcesContent":["import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    async init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n        await Promise.resolve();\n    }\n}\n"],"sourceRoot":""}