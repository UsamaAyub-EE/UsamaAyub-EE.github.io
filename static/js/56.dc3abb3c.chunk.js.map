{"version":3,"sources":["../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js"],"names":["fixBounceSpeed","p","undefined","collisionMaxSpeed","getRangeValue","options","collisions","maxSpeed","velocity","length","bounce","p1","p2","circleBounce","circleBounceDataFromParticle"],"mappings":"uHAAA,0DACA,MAAMA,EAAkBC,SACQC,IAAxBD,EAAEE,oBACFF,EAAEE,kBAAoBC,YAAcH,EAAEI,QAAQC,WAAWC,WAEzDN,EAAEO,SAASC,OAASR,EAAEE,oBACtBF,EAAEO,SAASC,OAASR,EAAEE,kBAC1B,EAEG,SAASO,EAAOC,EAAIC,GACvBC,YAAaC,YAA6BH,GAAKG,YAA6BF,IAC5EZ,EAAeW,GACfX,EAAeY,EACnB,C","file":"static/js/56.dc3abb3c.chunk.js","sourcesContent":["import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n"],"sourceRoot":""}